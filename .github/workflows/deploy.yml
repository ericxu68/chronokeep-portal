name: Release Portal
on:
    push:
        tags:
            - '*'
    workflow_dispatch:

jobs:
    build:
        name: Build Remote
        runs-on: ubuntu-22.04
        steps:
            - name: Check out source code
              uses: actions/checkout@v4

            # Generate version information
            - name: Generate version text file
              run: git describe --tag > version.txt

            # Set an environment variable to the tag we want to use to describe this release.
            - name: Get tag environment variable.
              run: echo "RELEASE_VERSION=$(git describe --tag | sed s/v// | sed -E s/[\.]/\\\\\./g)" >> $GITHUB_OUTPUT
              id: release-version

            # Set an environment variable to the tag we want to use to describe this release for file naming purposes
            - name: Get tag environment variable.
              run: echo "FILE_RELEASE_VERSION=$(git describe --tag | sed s/v// | sed -E s/[\.]/-/g)" >> $GITHUB_OUTPUT
              id: release-version-actual

            - name: Replace Cargo.toml version with tag.
              run: sed -i -E '0,/^version.*$/{s/^version.*$/version = "${{ steps.release-version.outputs.RELEASE_VERSION }}"/}' Cargo.toml

            # Install dependencies
            - name: Install dependencies
              run: chmod +x ./setup_cross.sh && ./setup_cross.sh && chmod +x cross_compile.sh && ./cross_compile.sh

            - name: Tar and Zip the version and executable files for armv7
              run: tar -cvf armv7-${{ steps.release-version.outputs.FILE_RELEASE_VERSION }}.tar target/armv7-unknown-linux-gnueabihf/release/chronokeep-portal version.txt && gzip armv7-${{ steps.release-version.outputs.FILE_RELEASE_VERSION }}.tar
              env:
                ARCH: armv7

            - name: Tar and Zip the version and executable files for amd64
              run: tar -cvf amd64-${{ steps.release-version.outputs.FILE_RELEASE_VERSION }}.tar target/release/chronokeep-portal version.txt && gzip amd64-${{ steps.release-version.outputs.FILE_RELEASE_VERSION }}.tar
                
            #- name: Create release
            #  id: create_release
            #  uses: ncipollo/release-action@v1
            #  env:
            #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #  with:
            #    tag: ${{ steps.release-version.outputs.RELEASE_VERSION }}

            #- name: Update release asset armv7
            #  id: upload-release-asset-armv7
            #  uses: svenstaro/upload-release-action@v2
            #  with:
            #    repo_token: ${{ secrets.GITHUB_TOKEN }}
            #    file: armv7-*.tar.gz

            #- name: Update release asset amd64
            #  id: upload-release-asset-amd64
            #  uses: svenstaro/upload-release-action@v2
            #  with:
            #    repo_token: ${{ secrets.GITHUB_TOKEN }}
            #    file: amd64-*.tar.gz